Creating ExploreAlgorithm...
Starting training with ExploreAlgorithm...
Training batch size: 1
Number of phases: 5
UCB horizon: 50
Number of threads: 20
Evaluating candidate:   0%|                                                                                               | 0/150 [00:00<?, ?it/s]

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 9: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 9: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 8: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 8: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.
Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 6: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 6: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 10: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 10: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 8: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 8: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 12: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 12: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 10: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 10: Rate limit - Retry 2/10 after 9.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 8: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 8: Rate limit - Retry 2/10 after 9.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.
Completion succeeded.
Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 6: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 6: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 5: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 5: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.
Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 4: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 4: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 8: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 8: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 10: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 10: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 8: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 8: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 8: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 8: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 11: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 11: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 9: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 9: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.
Completion succeeded.Completion succeeded.


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 8: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 8: Rate limit - Retry 2/10 after 9.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 10: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 10: Rate limit - Retry 2/10 after 9.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 8: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 8: Rate limit - Retry 2/10 after 9.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.
Completion succeeded.
Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 14: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 14: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.
Completion succeeded.
Completion succeeded.
Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 14: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 14: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 16: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 16: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 12: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 12: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 13: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 13: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Completion succeeded.
Step 14: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 14: Rate limit - Retry 2/10 after 9.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.
Completion succeeded.
Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 8: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 8: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0mLiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.


Step 7: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 7: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
Step 6: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...

Step 6: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 5: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 5: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.
Completion succeeded.
Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 7: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 7: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.
[Step 0] Buffer size: 1
[Step 0] [92mTest score: 0.4[0m
[Step 0] Total samples: 0
[Step 0] [91mTotal proposals: 0[0m
[94m
=== Phase 1/5 ===[0m
[96mStarting exploration phase...[0m
[96mExploring with OptoPrime.[0m
Explore: Forward pass: 100%|████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:41<00:00, 41.53s/it]
Explore: Forward pass: 100%|████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:17<00:00, 17.86s/it]
Explore: Forward pass: 100%|████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:35<00:00, 35.69s/it]
Explore: Forward pass: 100%|████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:20<00:00, 20.68s/it]
Explore: Forward pass: 100%|████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:34<00:00, 34.35s/it]
[96mStarting best candidate identification phase...[0m
[94mBest candidate identification: Starting 50 iterations[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:38<00:00,  3.88s/it]
[96mUCB iteration 1/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:35<00:00,  3.50s/it]
[96mUCB iteration 2/50: Selected candidate score 0.3000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:43<00:00,  4.34s/it]
[96mUCB iteration 3/50: Selected candidate score 0.3000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:37<00:00,  3.70s/it]
[96mUCB iteration 4/50: Selected candidate score 0.4000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:49<00:00,  4.99s/it]
[96mUCB iteration 5/50: Selected candidate score 0.3000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:31<00:00,  3.19s/it]
[96mUCB iteration 6/50: Selected candidate score 0.4000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:31<00:00,  3.10s/it]
[96mUCB iteration 7/50: Selected candidate score 0.4000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:38<00:00,  3.88s/it]
[96mUCB iteration 8/50: Selected candidate score 0.2000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:50<00:00,  5.09s/it]
[96mUCB iteration 9/50: Selected candidate score 0.2000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:40<00:00,  4.10s/it]
[96mUCB iteration 10/50: Selected candidate score 0.6000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:44<00:00,  4.42s/it]
[96mUCB iteration 11/50: Selected candidate score 0.6000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:45<00:00,  4.52s/it]
[96mUCB iteration 12/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:45<00:00,  4.54s/it]
[96mUCB iteration 13/50: Selected candidate score 0.6000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:48<00:00,  4.83s/it]
[96mUCB iteration 14/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:41<00:00,  4.13s/it]
[96mUCB iteration 15/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:44<00:00,  4.45s/it]
[96mUCB iteration 16/50: Selected candidate score 0.3000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:33<00:00,  3.39s/it]
[96mUCB iteration 17/50: Selected candidate score 0.2000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:41<00:00,  4.19s/it]
[96mUCB iteration 18/50: Selected candidate score 0.4000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:41<00:00,  4.18s/it]
[96mUCB iteration 19/50: Selected candidate score 0.2000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:40<00:00,  4.06s/it]
[96mUCB iteration 20/50: Selected candidate score 0.6000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:38<00:00,  3.85s/it]
[96mUCB iteration 21/50: Selected candidate score 0.6000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:31<00:00,  3.15s/it]
[96mUCB iteration 22/50: Selected candidate score 0.4000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:40<00:00,  4.01s/it]
[96mUCB iteration 23/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:36<00:00,  3.69s/it]
[96mUCB iteration 24/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:46<00:00,  4.70s/it]
[96mUCB iteration 25/50: Selected candidate score 0.3000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:47<00:00,  4.74s/it]
[96mUCB iteration 26/50: Selected candidate score 0.3000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:41<00:00,  4.11s/it]
[96mUCB iteration 27/50: Selected candidate score 0.8000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:35<00:00,  3.55s/it]
[96mUCB iteration 28/50: Selected candidate score 0.6000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:44<00:00,  4.48s/it]
[96mUCB iteration 29/50: Selected candidate score 0.1000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:36<00:00,  3.62s/it]
[96mUCB iteration 30/50: Selected candidate score 0.3000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:43<00:00,  4.40s/it]
[96mUCB iteration 31/50: Selected candidate score 0.4000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:39<00:00,  3.95s/it]
[96mUCB iteration 32/50: Selected candidate score 0.4000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:47<00:00,  4.70s/it]
[96mUCB iteration 33/50: Selected candidate score 0.4000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:42<00:00,  4.30s/it]
[96mUCB iteration 34/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:32<00:00,  3.29s/it]
[96mUCB iteration 35/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:40<00:00,  4.05s/it]
[96mUCB iteration 36/50: Selected candidate score 0.2000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:38<00:00,  3.87s/it]
[96mUCB iteration 37/50: Selected candidate score 0.4000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:43<00:00,  4.40s/it]
[96mUCB iteration 38/50: Selected candidate score 0.6000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:39<00:00,  3.90s/it]
[96mUCB iteration 39/50: Selected candidate score 0.2000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:40<00:00,  4.01s/it]
[96mUCB iteration 40/50: Selected candidate score 0.4000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:39<00:00,  3.99s/it]
[96mUCB iteration 41/50: Selected candidate score 0.4000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:42<00:00,  4.24s/it]
[96mUCB iteration 42/50: Selected candidate score 0.4000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:37<00:00,  3.72s/it]
[96mUCB iteration 43/50: Selected candidate score 0.2000 (evaluated on 10 samples)[0m
Evaluating candidate:   0%|                                                                                                | 0/10 [00:00<?, ?it/s]

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 9: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 9: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 10: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 10: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.
Completion succeeded.
[96mUCB iteration 44/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:41<00:00,  4.18s/it]
[96mUCB iteration 45/50: Selected candidate score 0.3000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:44<00:00,  4.49s/it]
[96mUCB iteration 46/50: Selected candidate score 0.4000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:35<00:00,  3.56s/it]
[96mUCB iteration 47/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:49<00:00,  4.92s/it]
[96mUCB iteration 48/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:57<00:00,  5.72s/it]
[96mUCB iteration 49/50: Selected candidate score 0.4000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:36<00:00,  3.60s/it]
[96mUCB iteration 50/50: Selected candidate score 0.6000 (evaluated on 10 samples)[0m
[96mConfidence intervals for all candidates:[0m
[96mAction 1: (0.1483, 0.6735) [mean: 0.4111, n: 90][0m
[96mAction 2: (0.2391, 0.6918) [mean: 0.4667, n: 120][0m
[96mAction 3: (0.0878, 0.6832) [mean: 0.3857, n: 70][0m
[96mAction 4: (0.1807, 0.6789) [mean: 0.4300, n: 100][0m
[96mAction 5: (0.0282, 0.6713) [mean: 0.3500, n: 60][0m
[96mAction 6: (0.0448, 0.6880) [mean: 0.3667, n: 60][0m
Evaluating candidate:   0%|                                                                                               | 0/150 [00:00<?, ?it/s]

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 7: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 7: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 8: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 8: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 8: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 8: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 9: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 9: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 9: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 9: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 8: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 8: Rate limit - Retry 2/10 after 9.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 10: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 10: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 9: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 9: Rate limit - Retry 2/10 after 9.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 9: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 9: Rate limit - Retry 2/10 after 9.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.
Completion succeeded.
Completion succeeded.
Completion succeeded.
Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 5: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 5: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 5: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 5: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 22: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 22: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 5: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 5: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 20: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 20: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 5: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 5: Rate limit - Retry 2/10 after 9.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 5: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 5: Rate limit - Retry 2/10 after 9.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.
Completion succeeded.
Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 6: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 6: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 6: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 6: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 6: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 6: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 6: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 6: Rate limit - Retry 2/10 after 9.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 6: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 6: Rate limit - Retry 2/10 after 9.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 6: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 6: Rate limit - Retry 2/10 after 9.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 17: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 17: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.
Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 12: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 12: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 12: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 12: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.
Completion succeeded.
Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 7: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 7: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 4: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 4: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 8: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 8: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.
Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 8: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 8: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 8: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 8: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 8: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 8: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 11: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 11: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 8: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 8: Rate limit - Retry 2/10 after 9.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 8: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 8: Rate limit - Retry 2/10 after 9.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 15: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 15: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.
Completion succeeded.
Completion succeeded.
Completion succeeded.
[Step 1] Buffer size: 6
[Step 1] [92mTest score: 0.41333333333333333[0m
[Step 1] Total samples: 505
[Step 1] [91mTotal proposals: 5[0m
[94m
=== Phase 2/5 ===[0m
[96mStarting exploration phase...[0m
[96mExploring with OptoPrime.[0m
Explore: Forward pass: 100%|████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:16<00:00, 16.04s/it]
Explore: Forward pass: 100%|████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:24<00:00, 24.99s/it]
Explore: Forward pass: 100%|████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:29<00:00, 29.03s/it]
Explore: Forward pass: 100%|████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:19<00:00, 19.02s/it]
Explore: Forward pass: 100%|████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:27<00:00, 27.61s/it]
[96mStarting best candidate identification phase...[0m
[94mBest candidate identification: Starting 50 iterations[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:32<00:00,  3.22s/it]
[96mUCB iteration 1/50: Selected candidate score 0.6000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:44<00:00,  4.48s/it]
[96mUCB iteration 2/50: Selected candidate score 0.4000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:34<00:00,  3.49s/it]
[96mUCB iteration 3/50: Selected candidate score 0.1000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:44<00:00,  4.50s/it]
[96mUCB iteration 4/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:56<00:00,  5.69s/it]
[96mUCB iteration 5/50: Selected candidate score 0.6000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:38<00:00,  3.82s/it]
[96mUCB iteration 6/50: Selected candidate score 0.6000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:42<00:00,  4.25s/it]
[96mUCB iteration 7/50: Selected candidate score 0.2000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:53<00:00,  5.30s/it]

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 4: Error: litellm.InternalServerError: VertexAIException InternalServerError - {
  "error": {
    "code": 500,
    "message": "Internal error encountered.",
    "status": "INTERNAL"
  }
}
, tring to retry...
Step 4: Retryable error - Retry 1/10 after 1.0s. Error: litellm.InternalServerError: VertexAIException InternalServerError - {
  "error": {
    "code": 500,
    "message": "Internal error encountered.",
    "status": "INTERNAL"
  }
}

Completion succeeded.
[96mUCB iteration 8/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:39<00:00,  3.94s/it]
[96mUCB iteration 9/50: Selected candidate score 0.1000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:38<00:00,  3.89s/it]
[96mUCB iteration 10/50: Selected candidate score 0.4000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:43<00:00,  4.31s/it]
[96mUCB iteration 11/50: Selected candidate score 0.3000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:52<00:00,  5.22s/it]
[96mUCB iteration 12/50: Selected candidate score 0.4000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:40<00:00,  4.07s/it]
[96mUCB iteration 13/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:41<00:00,  4.16s/it]
[96mUCB iteration 14/50: Selected candidate score 0.6000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:46<00:00,  4.62s/it]
[96mUCB iteration 15/50: Selected candidate score 0.2000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:41<00:00,  4.10s/it]
[96mUCB iteration 16/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:41<00:00,  4.17s/it]
[96mUCB iteration 17/50: Selected candidate score 0.3000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:50<00:00,  5.10s/it]
[96mUCB iteration 18/50: Selected candidate score 0.4000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:39<00:00,  3.97s/it]
[96mUCB iteration 19/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:37<00:00,  3.75s/it]
[96mUCB iteration 20/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:42<00:00,  4.23s/it]
[96mUCB iteration 21/50: Selected candidate score 0.1000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:50<00:00,  5.04s/it]
[96mUCB iteration 22/50: Selected candidate score 0.1000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:39<00:00,  3.98s/it]
[96mUCB iteration 23/50: Selected candidate score 0.4000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:44<00:00,  4.48s/it]
[96mUCB iteration 24/50: Selected candidate score 0.2000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:41<00:00,  4.13s/it]
[96mUCB iteration 25/50: Selected candidate score 0.4000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:36<00:00,  3.69s/it]
[96mUCB iteration 26/50: Selected candidate score 0.4000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:32<00:00,  3.28s/it]
[96mUCB iteration 27/50: Selected candidate score 0.3000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:40<00:00,  4.07s/it]
[96mUCB iteration 28/50: Selected candidate score 0.3000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:52<00:00,  5.27s/it]
[96mUCB iteration 29/50: Selected candidate score 0.3000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:44<00:00,  4.41s/it]
[96mUCB iteration 30/50: Selected candidate score 0.3000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:44<00:00,  4.46s/it]
[96mUCB iteration 31/50: Selected candidate score 0.3000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:39<00:00,  3.93s/it]
[96mUCB iteration 32/50: Selected candidate score 0.4000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:40<00:00,  4.00s/it]
[96mUCB iteration 33/50: Selected candidate score 0.3000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:36<00:00,  3.65s/it]
[96mUCB iteration 34/50: Selected candidate score 0.4000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:35<00:00,  3.54s/it]
[96mUCB iteration 35/50: Selected candidate score 0.2000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:35<00:00,  3.58s/it]
[96mUCB iteration 36/50: Selected candidate score 0.2000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:55<00:00,  5.52s/it]
[96mUCB iteration 37/50: Selected candidate score 0.3000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:45<00:00,  4.50s/it]
[96mUCB iteration 38/50: Selected candidate score 0.4000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:44<00:00,  4.40s/it]
[96mUCB iteration 39/50: Selected candidate score 0.2000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:37<00:00,  3.72s/it]
[96mUCB iteration 40/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:49<00:00,  4.97s/it]
[96mUCB iteration 41/50: Selected candidate score 0.6000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:41<00:00,  4.15s/it]
[96mUCB iteration 42/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:42<00:00,  4.25s/it]
[96mUCB iteration 43/50: Selected candidate score 0.4000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:35<00:00,  3.60s/it]
[96mUCB iteration 44/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:42<00:00,  4.28s/it]
[96mUCB iteration 45/50: Selected candidate score 0.6000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:31<00:00,  3.15s/it]
[96mUCB iteration 46/50: Selected candidate score 0.6000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:46<00:00,  4.69s/it]
[96mUCB iteration 47/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:44<00:00,  4.48s/it]
[96mUCB iteration 48/50: Selected candidate score 0.3000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:41<00:00,  4.17s/it]
[96mUCB iteration 49/50: Selected candidate score 0.2000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:57<00:00,  5.74s/it]
[96mUCB iteration 50/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
[96mConfidence intervals for all candidates:[0m
[96mAction 1: (0.1494, 0.6504) [mean: 0.4000, n: 110][0m
[96mAction 2: (0.2279, 0.6720) [mean: 0.4500, n: 140][0m
[96mAction 3: (0.1230, 0.6811) [mean: 0.4000, n: 90][0m
[96mAction 4: (0.1585, 0.6595) [mean: 0.4091, n: 110][0m
[96mAction 5: (0.0144, 0.6425) [mean: 0.3286, n: 70][0m
[96mAction 6: (0.0430, 0.6711) [mean: 0.3571, n: 70][0m
[96mAction 7: (0.1851, 0.6648) [mean: 0.4250, n: 120][0m
[96mAction 8: (-0.2799, 0.6795) [mean: 0.2000, n: 30][0m
[96mAction 9: (-0.0060, 0.6724) [mean: 0.3333, n: 60][0m
[96mAction 10: (0.1676, 0.6686) [mean: 0.4182, n: 110][0m
[96mAction 11: (0.1230, 0.6768) [mean: 0.4000, n: 90][0m
Evaluating candidate:   0%|                                                                                               | 0/150 [00:00<?, ?it/s]

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 6: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 6: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 6: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 6: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 6: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 6: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 6: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 6: Rate limit - Retry 2/10 after 9.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.
Completion succeeded.
Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 7: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 7: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 12: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 12: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.
Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0mStep 9: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.


Step 9: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Step 7: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 7: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 10: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 10: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.
Completion succeeded.
Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 9: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 9: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 10: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 10: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 8: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 8: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 9: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 9: Rate limit - Retry 2/10 after 9.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 10: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 10: Rate limit - Retry 2/10 after 9.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 12: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 12: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 14: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 14: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 8: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 8: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.
Completion succeeded.
Completion succeeded.
Completion succeeded.
Completion succeeded.
Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 18: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 18: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 15: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 15: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 16: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 16: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 5: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 5: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 5: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 5: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 5: Error: litellm.APIConnectionError: GeminiException - [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1017), tring to retry...
Step 5: Retryable error - Retry 1/10 after 1.0s. Error: litellm.APIConnectionError: GeminiException - [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1017)
Completion succeeded.
Completion succeeded.
Completion succeeded.Completion succeeded.

Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 10: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 10: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 10: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 10: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 10: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 10: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.
Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 8: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 8: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 14: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 14: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.
Completion succeeded.
Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 25: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 25: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 29: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0mStep 29: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.


Step 25: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 25: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.
Completion succeeded.Completion succeeded.


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 8: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 8: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 13: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 13: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 8: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 8: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.
Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 17: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 17: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 12: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 12: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.
Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 5: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 5: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 5: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 5: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 5: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 5: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 5: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 5: Rate limit - Retry 2/10 after 9.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.
Completion succeeded.
Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 11: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 11: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.
[Step 2] Buffer size: 11
[Step 2] [92mTest score: 0.34[0m
[Step 2] Total samples: 1010
[Step 2] [91mTotal proposals: 10[0m
[94m
=== Phase 3/5 ===[0m
[96mStarting exploration phase...[0m
[96mExploring with OptoPrime.[0m
Explore: Forward pass: 100%|████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:27<00:00, 27.70s/it]
Explore: Forward pass: 100%|████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:16<00:00, 16.33s/it]
Explore: Forward pass: 100%|████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:44<00:00, 44.20s/it]
Explore: Forward pass: 100%|████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:25<00:00, 25.38s/it]
Explore: Forward pass: 100%|████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:12<00:00, 12.31s/it]
[96mStarting best candidate identification phase...[0m
[94mBest candidate identification: Starting 50 iterations[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:40<00:00,  4.02s/it]
[96mUCB iteration 1/50: Selected candidate score 0.3000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:45<00:00,  4.58s/it]
[96mUCB iteration 2/50: Selected candidate score 0.1000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [01:00<00:00,  6.05s/it]


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m

LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m


LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.


Step 12: Error: litellm.APIConnectionError: GeminiException - [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1017), tring to retry...
Step 12: Retryable error - Retry 1/10 after 1.0s. Error: litellm.APIConnectionError: GeminiException - [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1017)Step 13: Error: litellm.APIConnectionError: GeminiException - [Errno 10053] An established connection was aborted by the software in your host machine, tring to retry...

Step 13: Retryable error - Retry 1/10 after 1.0s. Error: litellm.APIConnectionError: GeminiException - [Errno 10053] An established connection was aborted by the software in your host machineStep 13: Error: litellm.APIConnectionError: GeminiException - [Errno 10053] An established connection was aborted by the software in your host machine, tring to retry...

Step 13: Retryable error - Retry 1/10 after 1.0s. Error: litellm.APIConnectionError: GeminiException - [Errno 10053] An established connection was aborted by the software in your host machine
Completion succeeded.
Completion succeeded.
Completion succeeded.
[96mUCB iteration 3/50: Selected candidate score 0.2000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:34<00:00,  3.46s/it]
[96mUCB iteration 4/50: Selected candidate score 0.7000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:35<00:00,  3.54s/it]
[96mUCB iteration 5/50: Selected candidate score 0.2000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:45<00:00,  4.50s/it]
[96mUCB iteration 6/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:42<00:00,  4.27s/it]
[96mUCB iteration 7/50: Selected candidate score 0.1000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [01:02<00:00,  6.24s/it]
[96mUCB iteration 8/50: Selected candidate score 0.3000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:32<00:00,  3.21s/it]
[96mUCB iteration 9/50: Selected candidate score 0.3000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:43<00:00,  4.34s/it]
[96mUCB iteration 10/50: Selected candidate score 0.2000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:35<00:00,  3.58s/it]
[96mUCB iteration 11/50: Selected candidate score 0.4000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:32<00:00,  3.21s/it]
[96mUCB iteration 12/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:48<00:00,  4.88s/it]
[96mUCB iteration 13/50: Selected candidate score 0.3000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:43<00:00,  4.35s/it]
[96mUCB iteration 14/50: Selected candidate score 0.3000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:41<00:00,  4.19s/it]
[96mUCB iteration 15/50: Selected candidate score 0.2000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:38<00:00,  3.90s/it]
[96mUCB iteration 16/50: Selected candidate score 0.3000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:47<00:00,  4.76s/it]
[96mUCB iteration 17/50: Selected candidate score 0.1000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:43<00:00,  4.36s/it]
[96mUCB iteration 18/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:56<00:00,  5.62s/it]
[96mUCB iteration 19/50: Selected candidate score 0.4000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:43<00:00,  4.39s/it]
[96mUCB iteration 20/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:45<00:00,  4.56s/it]
[96mUCB iteration 21/50: Selected candidate score 0.3000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:35<00:00,  3.60s/it]
[96mUCB iteration 22/50: Selected candidate score 0.4000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:37<00:00,  3.79s/it]
[96mUCB iteration 23/50: Selected candidate score 0.4000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:51<00:00,  5.12s/it]
[96mUCB iteration 24/50: Selected candidate score 0.6000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:56<00:00,  5.62s/it]
[96mUCB iteration 25/50: Selected candidate score 0.6000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:37<00:00,  3.77s/it]
[96mUCB iteration 26/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:44<00:00,  4.47s/it]
[96mUCB iteration 27/50: Selected candidate score 0.3000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:27<00:00,  2.79s/it]
[96mUCB iteration 28/50: Selected candidate score 0.1000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:44<00:00,  4.49s/it]
[96mUCB iteration 29/50: Selected candidate score 0.2000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:40<00:00,  4.05s/it]
[96mUCB iteration 30/50: Selected candidate score 0.3000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:45<00:00,  4.54s/it]
[96mUCB iteration 31/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:34<00:00,  3.42s/it]
[96mUCB iteration 32/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:38<00:00,  3.83s/it]
[96mUCB iteration 33/50: Selected candidate score 0.3000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:45<00:00,  4.51s/it]
[96mUCB iteration 34/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:39<00:00,  3.92s/it]
[96mUCB iteration 35/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:51<00:00,  5.11s/it]
[96mUCB iteration 36/50: Selected candidate score 0.2000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:43<00:00,  4.35s/it]
[96mUCB iteration 37/50: Selected candidate score 0.3000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:39<00:00,  3.95s/it]
[96mUCB iteration 38/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:35<00:00,  3.50s/it]
[96mUCB iteration 39/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:35<00:00,  3.52s/it]
[96mUCB iteration 40/50: Selected candidate score 0.1000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:47<00:00,  4.79s/it]
[96mUCB iteration 41/50: Selected candidate score 0.1000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:34<00:00,  3.47s/it]
[96mUCB iteration 42/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:49<00:00,  4.90s/it]
[96mUCB iteration 43/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:57<00:00,  5.77s/it]

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.



[91mBest candidate identification: Error evaluating candidate: unsupported operand type(s) for +: 'float' and 'NoneType'[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:31<00:00,  3.11s/it]
[96mUCB iteration 45/50: Selected candidate score 0.4000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:44<00:00,  4.49s/it]
[96mUCB iteration 46/50: Selected candidate score 0.1000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:39<00:00,  3.94s/it]
[96mUCB iteration 47/50: Selected candidate score 0.3000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:37<00:00,  3.79s/it]
[96mUCB iteration 48/50: Selected candidate score 0.2000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:42<00:00,  4.28s/it]
[96mUCB iteration 49/50: Selected candidate score 0.3000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:51<00:00,  5.17s/it]
[96mUCB iteration 50/50: Selected candidate score 0.2000 (evaluated on 10 samples)[0m
[96mConfidence intervals for all candidates:[0m
[96mAction 1: (0.1423, 0.6576) [mean: 0.4000, n: 110][0m
[96mAction 2: (0.2060, 0.6473) [mean: 0.4267, n: 150][0m
[96mAction 3: (0.1616, 0.6550) [mean: 0.4083, n: 120][0m
[96mAction 4: (0.1514, 0.6667) [mean: 0.4091, n: 110][0m
[96mAction 5: (0.0055, 0.6515) [mean: 0.3286, n: 70][0m
[96mAction 6: (0.0603, 0.6646) [mean: 0.3625, n: 80][0m
[96mAction 7: (0.1782, 0.6716) [mean: 0.4250, n: 120][0m
[96mAction 8: (-0.2274, 0.6272) [mean: 0.2000, n: 40][0m
[96mAction 9: (-0.0231, 0.6229) [mean: 0.3000, n: 70][0m
[96mAction 10: (0.1532, 0.6466) [mean: 0.4000, n: 120][0m
[96mAction 11: (0.1616, 0.6550) [mean: 0.4083, n: 120][0m
[96mAction 12: (-0.0323, 0.6655) [mean: 0.3167, n: 60][0m
[96mAction 13: (-0.2274, 0.6272) [mean: 0.2000, n: 40][0m
[96mAction 14: (0.0997, 0.6737) [mean: 0.3700, n: 100][0m
[96mAction 15: (0.1514, 0.6667) [mean: 0.4091, n: 110][0m
[96mAction 16: (-0.0231, 0.6229) [mean: 0.3000, n: 70][0m
Evaluating candidate:  19%|████████████████                                                                      | 28/150 [00:58<03:25,  1.68s/it]

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 8: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 8: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 19: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash",
              "location": "global"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "29s"
      }
    ]
  }
}
, tring to retry...
Step 19: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash",
              "location": "global"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "29s"
      }
    ]
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.
[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m


LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m

Step 0: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash",
              "location": "global"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "29s"
      }
    ]
  }
}
, tring to retry...
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.Step 11: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "29s"
      }
    ]
  }
}
, tring to retry...


Step 11: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "29s"
      }
    ]
  }
}
Step 0: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash",
              "location": "global"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "29s"
      }
    ]
  }
}



Step 3: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "29s"
      }
    ]
  }
}
, tring to retry...
Step 3: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "29s"
      }
    ]
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0mLiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.




[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
Step 27: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "29s"
      }
    ]
  }
}
, tring to retry...LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.


LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.Step 11: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "29s"
      }
    ]
  }
}
, tring to retry...
[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.
[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0mLiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.
Step 27: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "29s"
      }
    ]
  }
}


LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.


LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 10: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "29s"
      }
    ]
  }
}
, tring to retry...
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.
[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0mStep 14: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "28s"
      }
    ]
  }
}
, tring to retry...




Step 11: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "29s"
      }
    ]
  }
}





LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 0: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "28s"
      }
    ]
  }
}
, tring to retry...
Step 7: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash",
              "location": "global"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "28s"
      }
    ]
  }
}
, tring to retry...

Step 23: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "28s"
      }
    ]
  }
}
, tring to retry...
Step 12: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "28s"
      }
    ]
  }
}
, tring to retry...
Step 12: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "28s"
      }
    ]
  }
}
, tring to retry...Step 14: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "28s"
      }
    ]
  }
}
Step 10: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "29s"
      }
    ]
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m

Step 9: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "28s"
      }
    ]
  }
}
, tring to retry...



LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.Step 12: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "28s"
      }
    ]
  }
}
Step 12: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "28s"
      }
    ]
  }
}
Step 20: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash",
              "location": "global"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "28s"
      }
    ]
  }
}
, tring to retry...


Step 12: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "28s"
      }
    ]
  }
}
, tring to retry...Step 23: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "28s"
      }
    ]
  }
}



Step 7: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash",
              "location": "global"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "28s"
      }
    ]
  }
}


Step 0: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "28s"
      }
    ]
  }
}
Step 9: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "28s"
      }
    ]
  }
}

Step 7: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "28s"
      }
    ]
  }
}
, tring to retry...

Step 20: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash",
              "location": "global"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "28s"
      }
    ]
  }
}



Step 24: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "28s"
      }
    ]
  }
}
, tring to retry...


Step 7: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "28s"
      }
    ]
  }
}
Step 12: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "28s"
      }
    ]
  }
}
Step 24: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "28s"
      }
    ]
  }
}




[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 11: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "28s"
      }
    ]
  }
}
, tring to retry...
Step 11: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "28s"
      }
    ]
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Completion succeeded.
Completion succeeded.
Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 27: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash",
              "location": "global"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "26s"
      }
    ]
  }
}
, tring to retry...
Step 27: Rate limit - Retry 2/10 after 9.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash",
              "location": "global"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "26s"
      }
    ]
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0mStep 12: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "26s"
      }
    ]
  }
}
, tring to retry...
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.
Step 12: Rate limit - Retry 2/10 after 9.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "26s"
      }
    ]
  }
}



Step 10: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "26s"
      }
    ]
  }
}
, tring to retry...
Step 10: Rate limit - Retry 2/10 after 9.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "26s"
      }
    ]
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 7: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "25s"
      }
    ]
  }
}
, tring to retry...
Step 7: Rate limit - Retry 2/10 after 9.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "25s"
      }
    ]
  }
}

Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 12: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "25s"
      }
    ]
  }
}
, tring to retry...
Step 12: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "25s"
      }
    ]
  }
}

Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 0: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "25s"
      }
    ]
  }
}
, tring to retry...
Step 0: Rate limit - Retry 2/10 after 9.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "25s"
      }
    ]
  }
}

Completion succeeded.
Completion succeeded.
Completion succeeded.
Completion succeeded.
Completion succeeded.
Completion succeeded.
Completion succeeded.
[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0mCompletion succeeded.


Completion succeeded.LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.


Step 11: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash",
              "location": "global"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "24s"
      }
    ]
  }
}
, tring to retry...
Completion succeeded.Step 11: Rate limit - Retry 2/10 after 9.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash",
              "location": "global"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "24s"
      }
    ]
  }
}



[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 14: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash",
              "location": "global"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "24s"
      }
    ]
  }
}
, tring to retry...
Step 14: Rate limit - Retry 2/10 after 9.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash",
              "location": "global"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "24s"
      }
    ]
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 8: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "24s"
      }
    ]
  }
}
, tring to retry...
Step 8: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "24s"
      }
    ]
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 12: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash",
              "location": "global"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "24s"
      }
    ]
  }
}
, tring to retry...
Step 12: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_input_token_count",
            "quotaId": "GenerateContentInputTokensPerModelPerMinute-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash",
              "location": "global"
            },
            "quotaValue": "4000000"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "24s"
      }
    ]
  }
}

Completion succeeded.
Completion succeeded.
Completion succeeded.
Completion succeeded.
Completion succeeded.
Completion succeeded.
Completion succeeded.
Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.Step 13: Error: litellm.InternalServerError: VertexAIException InternalServerError - {
  "error": {
    "code": 500,
    "message": "Internal error encountered.",
    "status": "INTERNAL"
  }
}
, tring to retry...


Step 13: Retryable error - Retry 1/10 after 1.0s. Error: litellm.InternalServerError: VertexAIException InternalServerError - {
  "error": {
    "code": 500,
    "message": "Internal error encountered.",
    "status": "INTERNAL"
  }
}

Completion succeeded.
Completion succeeded.
Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 6: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 6: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 5: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 5: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 7: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 7: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 6: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 6: Rate limit - Retry 2/10 after 9.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}


[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 5: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 5: Rate limit - Retry 2/10 after 9.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.
Completion succeeded.
Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 11: Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}
, tring to retry...
Step 11: Rate limit - Retry 1/10 after 2.0s. Error: litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {
  "error": {
    "code": 429,
    "message": "Resource has been exhausted (e.g. check quota).",
    "status": "RESOURCE_EXHAUSTED"
  }
}

Completion succeeded.

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

Step 0: Error: litellm.APIConnectionError: GeminiException - [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1017), tring to retry...
Step 0: Retryable error - Retry 1/10 after 1.0s. Error: litellm.APIConnectionError: GeminiException - [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1017)
Completion succeeded.
[91mPhase 3: Test evaluation failed: unsupported operand type(s) for +: 'float' and 'NoneType'[0m
[94m
=== Phase 4/5 ===[0m
[96mStarting exploration phase...[0m
[96mExploring with OptoPrime.[0m
Explore: Forward pass: 100%|████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:24<00:00, 24.76s/it]
Explore: Forward pass: 100%|████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:35<00:00, 35.80s/it]
Explore: Forward pass: 100%|████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:22<00:00, 22.72s/it]
Explore: Forward pass: 100%|████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:25<00:00, 25.32s/it]
Explore: Forward pass: 100%|████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:28<00:00, 28.18s/it]
[96mStarting best candidate identification phase...[0m
[94mBest candidate identification: Starting 50 iterations[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:47<00:00,  4.70s/it]
[96mUCB iteration 1/50: Selected candidate score 0.3000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:32<00:00,  3.26s/it]
[96mUCB iteration 2/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:42<00:00,  4.30s/it]
[96mUCB iteration 3/50: Selected candidate score 0.2000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:34<00:00,  3.42s/it]
[96mUCB iteration 4/50: Selected candidate score 0.4000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:38<00:00,  3.82s/it]
[96mUCB iteration 5/50: Selected candidate score 0.2000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [01:05<00:00,  6.57s/it]

[1;31mGive Feedback / Get Help: https://github.com/BerriAI/litellm/issues/new[0m
LiteLLM.Info: If you need to debug this error, use `litellm._turn_on_debug()'.

[91mBest candidate identification: Error evaluating candidate: unsupported operand type(s) for +: 'float' and 'NoneType'[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:38<00:00,  3.83s/it]
[96mUCB iteration 7/50: Selected candidate score 0.6000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:34<00:00,  3.46s/it]
[96mUCB iteration 8/50: Selected candidate score 0.4000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:33<00:00,  3.38s/it]
[96mUCB iteration 9/50: Selected candidate score 0.8000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:45<00:00,  4.52s/it]
[96mUCB iteration 10/50: Selected candidate score 0.4000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:45<00:00,  4.56s/it]
[96mUCB iteration 11/50: Selected candidate score 0.2000 (evaluated on 10 samples)[0m
Evaluating candidate: 100%|███████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:39<00:00,  3.98s/it]
[96mUCB iteration 12/50: Selected candidate score 0.5000 (evaluated on 10 samples)[0m
Evaluating candidate:  10%|████████▊                                                                               | 1/10 [00:08<01:12,  8.01s/it]
